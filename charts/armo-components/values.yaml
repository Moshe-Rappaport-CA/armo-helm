# Default values for armo operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

armoNameSpace: armo-system
appLabel: armo-vuln-scanner
registrySecretName: armoregcred
loginSecretName: armo-login
createKubescapeServiceAccount: true


# ARMO BE URLs
environment: "prod"
eventReceiverHttpUrl: "https://report.armo.cloud"
k8sReportUrl: "wss://report.armo.cloud"
postmanUrl: "postman.euprod1.cyberarmorsoft.com"
masterNotificationService: "ens.euprod1.cyberarmorsoft.com"
# ARMO DEV BE URLs
devEventReceiverHttpUrl: "https://report.eudev3.cyberarmorsoft.com"
devPostmanUrl: "postman.eudev3.cyberarmorsoft.com"
devK8sReportUrl: "wss://report.eudev3.cyberarmorsoft.com"
devMasterNotificationService: "ens.eudev3.cyberarmorsoft.com"
# ARMO STAGING BE URLs
stagingEventReceiverHttpUrl: "https://report.eustage2.cyberarmorsoft.com"
stagingPostmanUrl: "postman.eustage2.cyberarmorsoft.com"
stagingK8sReportUrl: "wss://report.eustage2.cyberarmorsoft.com"
stagingMasterNotificationService: "ens.eustage2.cyberarmorsoft.com"
 
# Customer Specific Data
# accountGuid is deliberatly not defined here and it should be defined by the user
clusterName: "kubescape-default-cluster-name"


# Cloud support
cloud_provider_engine:
cloudRegion:
aws_iam_role_arn:
gke_service_account:
gkeProject:

loginInfo:
  username: ""
  password: ""
  customer: ""


nameOverride: ""
fullnameOverride: ""

global:
  armoSystemMode: "SCAN"
  namespaceTier: armo-system-control-plane
  beConfig: armo-be-config
  armoServiceAccountName: armo-scanner-service-account
  armoKubescapeServiceAccountName: armo-kubescape-service-account
  armoScanRegistryServiceAccountName: armo-kubescape-service-account
  defaultServiceAccount: default
  ContainerSecurityContext: 
    allowPrivilegeEscalation: false
    seLinuxOptions:
      level: "s0:c123,c456"


armoScanScheduler:

  ## Schedule Scan using cron
  ##
  enabled: true

  ## scan scheduler container name
  ##
  name: armo-scan-scheduler

           # -- Frequency of running the scan
           #     ┌───────────── minute (0 - 59)
           #     │ ┌───────────── hour (0 - 23)
           #     │ │ ┌───────────── day of the month (1 - 31)
           #     │ │ │ ┌───────────── month (1 - 12)
           #     │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday;
           #     │ │ │ │ │                         7 is also Sunday on some systems)
           #     │ │ │ │ │
           #     │ │ │ │ │
           #     * * * * *
  scanSchedule: "0 0 * * *"
  
  image:
    repository: curlimages/curl
    tag: sha256:faaba66e89c87fd3fb51336857142ee6ce78fa8d8f023a5713d2bf4957f1aca8
    pullPolicy: IfNotPresent
  
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    requests:
       cpu: 10m
       memory: 10Mi
    limits:
       cpu: 500m
       memory: 50Mi
  
  ContainerSecurityContext: 
    allowPrivilegeEscalation: false
    seLinuxOptions:
      level: "s0:c123,c456"

  replicaCount: 1

armoScanRegistry:

  ## Schedule Scan using cron
  ##
  enabled: true

  ## scan scheduler container name
  ##
  name: armo-scan-registry
  
  image:
    repository: curlimages/curl
    tag: sha256:faaba66e89c87fd3fb51336857142ee6ce78fa8d8f023a5713d2bf4957f1aca8
    pullPolicy: IfNotPresent
  
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    requests:
       cpu: 10m
       memory: 10Mi
    limits:
       cpu: 500m
       memory: 50Mi
  
  ContainerSecurityContext: 
    allowPrivilegeEscalation: false
    seLinuxOptions:
      level: "s0:c123,c456"

  replicaCount: 1

armoKubescape:
  name: armo-kubescape
    #      ┌────────────────── timezone (optional)
    #      |      ┌───────────── minute (0 - 59)
    #      |      │ ┌───────────── hour (0 - 23)
    #      |      │ │ ┌───────────── day of the month (1 - 31)
    #      |      │ │ │ ┌───────────── month (1 - 12)
    #      |      │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday;
    #      |      │ │ │ │ │                         7 is also Sunday on some systems)
    #      |      │ │ │ │ │
    #      |      │ │ │ │ │
    # CRON_TZ=UTC * * * * *
  scanSchedule:  "0 8 * * *"
  image:
    repository: quay.io/armosec/kubescape
    tag: v2.0.148
    pullPolicy: Always

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    requests:
       cpu: 10m
       ephemeral-storage: 500Mi
       memory: 100Mi
    limits:
       cpu: 500m
       ephemeral-storage: 1Gi
       memory: 500Mi
  enableHostScan: true


armoWebsocket:

  ## Deploy WebSocket
  ##
  enabled: true

  ## armo websocket container name
  ##
  name: armo-web-socket

           # -- Frequency of running the scan
           #       ┌───────────── minute (0 - 59)
           #       │ ┌───────────── hour (0 - 23)
           #       │ │ ┌───────────── day of the month (1 - 31)
           #       │ │ │ ┌───────────── month (1 - 12)
           #       │ │ │ │ ┌───────────── day of the week (0 - 6) (Sunday to Saturday;
           #       │ │ │ │ │                         7 is also Sunday on some systems)
           #       │ │ │ │ │
           #       │ │ │ │ │
           #       * * * * *
  scanSchedule: "*/5 * * * *"

  ## armo vulnerability scanner container image
  ##
  image:
    repository: quay.io/armosec/k8s-ca-websocket-ubi
    tag: 448
    pullPolicy: IfNotPresent

  replicaCount: 1

  service:
    type: ClusterIP
    port: 4002
    targetPort: 4002
    protocol: TCP

  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    requests:
       cpu: 50m
       ephemeral-storage: 500Mi
       memory: 100Mi
    limits:
       cpu: 100m
       ephemeral-storage: 1Gi
       memory: 300Mi


  env: {}

  labels: {}


armoVulnScanner:

  ## Deploy WebHook
  ##
  enabled: true

  ## armo websocket container name
  ##
  name: armo-vuln-scan

  ## armo webhook container image
  ##
  image:
    repository: quay.io/armosec/k8s-ca-vuln-scan-ubi
    tag: 113
    pullPolicy: Always

  replicaCount: 1

  service:
    type: ClusterIP
    port: 8080
    targetPort: 8080
    protocol: TCP

  resources:
    requests:
       cpu: 300m
       memory: 200Mi
       # Consider to increase ephemeral-storage requests in order to avoid pod eviction due to huge images
       # More details: https://hub.armo.cloud/docs/limitations
       #               https://github.com/armosec/kubescape/issues/389
       ephemeral-storage: 2Gi
    limits:
       cpu: 1500m
       memory: 1000Mi
       ephemeral-storage: 8Gi

  env:
  - name: CA_MAX_VULN_SCAN_ROUTINS
    value: "1"

  labels: {}

  ContainerSecurityContext: 
    allowPrivilegeEscalation: false
    seLinuxOptions:
      level: "s0:c123,c456"

armoCollector:
  enabled: true

  ## armo collector container name
  name: armo-collector

  ##
  image:
    repository: quay.io/armosec/k8s-ca-dashboard-aggregator-ubi
    tag: 185
    pullPolicy: IfNotPresent

  replicaCount: 1
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    requests:
       cpu: 10m
       ephemeral-storage: 500Mi
       memory: 40Mi
    limits:
       cpu: 500m
       ephemeral-storage: 1Gi
       memory: 500Mi


  env:
    - name: PRINT_REPORT
      value: "false"


  labels: {}


armoNotificationService:
  enabled: true

  ## armo notification-service container name
  name: armo-notification-service

  websocketService:
    type: ClusterIP
    port: 8001
    targetPort: 8001
    protocol: TCP

  httpService:
    type: ClusterIP
    port: 8002
    targetPort: 8002
    protocol: TCP
  
  ##
  image:
    repository: quay.io/armosec/notification-server-ubi
    tag: 89
    pullPolicy: Always

  replicaCount: 1
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    requests:
       cpu: 10m
       ephemeral-storage: 500Mi
       memory: 10Mi
    limits:
       cpu: 100m
       ephemeral-storage: 1Gi
       memory: 50Mi


  env: {}
    


  labels: {}
