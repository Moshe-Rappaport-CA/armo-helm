{{- if .Values.armoNotificationService.enabled  }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.armoNotificationService.name }}
  namespace: {{ .Values.armoNameSpace }}
  labels:
    app: {{ .Values.armoNotificationService.name }}
    tier: {{ .Values.global.namespaceTier}}
    helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
spec:
  replicas: {{ .Values.armoNotificationService.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.armoNotificationService.name }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      tier: {{ .Values.global.namespaceTier}}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.armoNotificationService.name }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        helm.sh/chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
        helm.sh/revision: "{{ .Release.Revision }}"
        tier: {{ .Values.global.namespaceTier}}
        app: {{ .Values.armoNotificationService.name }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
      - name: {{ toYaml .Values.imagePullSecrets }}
      {{- end }}
      containers:
        - name: {{ .Values.armoNotificationService.name }}
          image: "{{ .Values.armoNotificationService.image.repository }}:{{ .Values.armoNotificationService.image.tag }}"
          imagePullPolicy: {{ .Values.armoNotificationService.image.pullPolicy }}
          ports:
            - name: "websocket"
              containerPort: {{ .Values.armoNotificationService.websocketService.port }}
              protocol: TCP
            - name: "rest-api"
              containerPort: {{ .Values.armoNotificationService.httpService.port }}
              protocol: TCP
          resources:
{{ toYaml .Values.armoNotificationService.resources | indent 12 }}
          env:  
            - name: CA_CUSTOMER_GUID
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.beConfig }}
                  key: accountGuid
            - name: CA_CLUSTER_NAME
              valueFrom:
                configMapKeyRef:
                  name: {{ .Values.global.beConfig }}
                  key: clusterName
            - name: MASTER_NOTIFICATION_SERVER_HOST
              valueFrom:
                configMapKeyRef:
                  key: masterNotificationServer
                  name: {{ .Values.global.beConfig }}
            - name: MASTER_NOTIFICATION_SERVER_ATTRIBUTES
              value: customerGUID
            - name: CA_NOTIFICATION_SERVER_WS_PORT
              value: "{{ .Values.armoNotificationService.websocketService.port }}"
            - name: CA_NOTIFICATION_SERVER_PORT
              value: "{{ .Values.armoNotificationService.httpService.port }}"            
            {{- range .Values.armoNotificationService.env }}
            - name: {{ .name  }}
              value: "{{ .value }}"
            {{- end }}
          args:
            - -alsologtostderr
            - -v=4
            - 2>&1
          securityContext:
{{- toYaml .Values.global.ContainerSecurityContext | nindent 12}}
      volumes:
        - name: {{ .Values.global.beConfig }}
          configMap:
            name: {{ .Values.global.beConfig }}
            items:
            - key: "clusterData"
              path: "clusterData.json"
      serviceAccountName: {{ .Values.global.armoServiceAccountName }}
      automountServiceAccountToken: false
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}